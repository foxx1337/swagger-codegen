    public enum {{datatypeWithEnum}} {

        {{#allowableValues}}
        {{#enumVars}}{{name}}({{#datatype}}{{datatype}}{{/datatype}}{{^datatype}}{{dataType}}{{/datatype}}.valueOf({{{value}}})){{^-last}}, {{/-last}}{{#-last}};{{/-last}}{{/enumVars}}
        {{/allowableValues}}


        private {{#datatype}}{{datatype}}{{/datatype}}{{^datatype}}{{dataType}}{{/datatype}} value;

        {{datatypeWithEnum}} ({{#datatype}}{{datatype}}{{/datatype}}{{^datatype}}{{dataType}}{{/datatype}} v) {
            value = v;
        }

        public String value() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static {{datatypeWithEnum}} fromValue(String v) {
            for ({{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}} b : {{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}}.values()) {
                if (String.valueOf(b.value).equals(v)) {
                    return b;
                }
            }
            return null;
        }

        public static {{datatypeWithEnum}} fromString(String v) {
            return fromValue(v);
        }
    }
